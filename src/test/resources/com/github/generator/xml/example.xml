<CompilationUnit>
  <PackageDeclaration>
    <QualifiedNameExpr name="xml">
      <QualifiedNameExpr name="generator">
        <QualifiedNameExpr name="github">
          <NameExpr name="com"/>
          <qualifier reference="../NameExpr"/>
        </QualifiedNameExpr>
        <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
      </QualifiedNameExpr>
      <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
    </QualifiedNameExpr>
    <name class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
  </PackageDeclaration>
  <ImportDeclaration>
    <QualifiedNameExpr name="NameExpr">
      <QualifiedNameExpr name="expr">
        <QualifiedNameExpr name="ast">
          <QualifiedNameExpr name="javaparser">
            <QualifiedNameExpr name="github">
              <NameExpr name="com"/>
              <qualifier reference="../NameExpr"/>
            </QualifiedNameExpr>
            <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
          </QualifiedNameExpr>
          <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
        </QualifiedNameExpr>
        <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
      </QualifiedNameExpr>
      <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
    </QualifiedNameExpr>
    <name class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
    <static__>false</static__>
    <asterisk>false</asterisk>
    <isEmptyImportDeclaration>false</isEmptyImportDeclaration>
  </ImportDeclaration>
  <ImportDeclaration>
    <QualifiedNameExpr name="SingleValueConverter">
      <QualifiedNameExpr name="converters">
        <QualifiedNameExpr name="xstream">
          <QualifiedNameExpr name="thoughtworks">
            <NameExpr name="com"/>
            <qualifier reference="../NameExpr"/>
          </QualifiedNameExpr>
          <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
        </QualifiedNameExpr>
        <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
      </QualifiedNameExpr>
      <qualifier class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
    </QualifiedNameExpr>
    <name class="QualifiedNameExpr" reference="../QualifiedNameExpr"/>
    <static__>false</static__>
    <asterisk>false</asterisk>
    <isEmptyImportDeclaration>false</isEmptyImportDeclaration>
  </ImportDeclaration>
  <ClassOrInterfaceDeclaration name="NameExprConverter">
    <NameExpr/>
    <MethodDeclaration modifiers="1" name="toString" arrayCount="0" isDefault="false">
      <MarkerAnnotationExpr name="Override">
        <NameExpr name="Override"/>
      </MarkerAnnotationExpr>
      <ReferenceType>
        <ClassOrInterfaceType>
          <name>String</name>
          <typeArguments>
            <typeArguments/>
            <usesDiamondOperator>false</usesDiamondOperator>
          </typeArguments>
        </ClassOrInterfaceType>
        <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
        <arrayCount>0</arrayCount>
      </ReferenceType>
      <NameExpr/>
      <Parameter>
        <VariableDeclaratorId>
          <name>obj</name>
          <arrayCount>0</arrayCount>
        </VariableDeclaratorId>
        <ReferenceType>
          <ClassOrInterfaceType>
            <name>Object</name>
            <typeArguments>
              <typeArguments/>
              <usesDiamondOperator>false</usesDiamondOperator>
            </typeArguments>
          </ClassOrInterfaceType>
          <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
          <arrayCount>0</arrayCount>
        </ReferenceType>
        <modifiers>0</modifiers>
        <id reference="../VariableDeclaratorId"/>
        <type class="ReferenceType" reference="../ReferenceType"/>
        <isVarArgs>false</isVarArgs>
      </Parameter>
      <BlockStmt>
        <ReturnStmt>
          <MethodCallExpr name="getName">
            <EnclosedExpr>
              <CastExpr>
                <ReferenceType>
                  <ClassOrInterfaceType>
                    <name>NameExpr</name>
                    <typeArguments>
                      <typeArguments/>
                      <usesDiamondOperator>false</usesDiamondOperator>
                    </typeArguments>
                  </ClassOrInterfaceType>
                  <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
                  <arrayCount>0</arrayCount>
                </ReferenceType>
                <NameExpr name="obj"/>
                <type class="ReferenceType" reference="../ReferenceType"/>
                <expr class="NameExpr" reference="../NameExpr"/>
              </CastExpr>
              <inner class="CastExpr" reference="../CastExpr"/>
            </EnclosedExpr>
            <NameExpr/>
            <NameExpr name="getName"/>
            <scope class="EnclosedExpr" reference="../EnclosedExpr"/>
          </MethodCallExpr>
          <expr class="MethodCallExpr" reference="../MethodCallExpr"/>
        </ReturnStmt>
      </BlockStmt>
      <NameExpr name="toString"/>
      <annotations>
        <MarkerAnnotationExpr reference="../../MarkerAnnotationExpr"/>
      </annotations>
      <type class="ReferenceType" reference="../ReferenceType"/>
      <parameters>
        <Parameter reference="../../Parameter"/>
      </parameters>
      <body reference="../BlockStmt"/>
    </MethodDeclaration>
    <MethodDeclaration modifiers="1" name="fromString" arrayCount="0" isDefault="false">
      <MarkerAnnotationExpr name="Override">
        <NameExpr name="Override"/>
      </MarkerAnnotationExpr>
      <ReferenceType>
        <ClassOrInterfaceType>
          <name>Object</name>
          <typeArguments>
            <typeArguments/>
            <usesDiamondOperator>false</usesDiamondOperator>
          </typeArguments>
        </ClassOrInterfaceType>
        <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
        <arrayCount>0</arrayCount>
      </ReferenceType>
      <NameExpr/>
      <Parameter>
        <VariableDeclaratorId>
          <name>str</name>
          <arrayCount>0</arrayCount>
        </VariableDeclaratorId>
        <ReferenceType>
          <ClassOrInterfaceType>
            <name>String</name>
            <typeArguments>
              <typeArguments/>
              <usesDiamondOperator>false</usesDiamondOperator>
            </typeArguments>
          </ClassOrInterfaceType>
          <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
          <arrayCount>0</arrayCount>
        </ReferenceType>
        <modifiers>0</modifiers>
        <id reference="../VariableDeclaratorId"/>
        <type class="ReferenceType" reference="../ReferenceType"/>
        <isVarArgs>false</isVarArgs>
      </Parameter>
      <BlockStmt>
        <ReturnStmt>
          <ObjectCreationExpr>
            <ClassOrInterfaceType>
              <name>NameExpr</name>
              <typeArguments>
                <typeArguments/>
                <usesDiamondOperator>false</usesDiamondOperator>
              </typeArguments>
            </ClassOrInterfaceType>
            <NameExpr name="str"/>
            <type reference="../ClassOrInterfaceType"/>
            <args>
              <NameExpr reference="../../NameExpr"/>
            </args>
          </ObjectCreationExpr>
          <expr class="ObjectCreationExpr" reference="../ObjectCreationExpr"/>
        </ReturnStmt>
      </BlockStmt>
      <NameExpr name="fromString"/>
      <annotations>
        <MarkerAnnotationExpr reference="../../MarkerAnnotationExpr"/>
      </annotations>
      <type class="ReferenceType" reference="../ReferenceType"/>
      <parameters>
        <Parameter reference="../../Parameter"/>
      </parameters>
      <body reference="../BlockStmt"/>
    </MethodDeclaration>
    <MethodDeclaration modifiers="1" name="canConvert" arrayCount="0" isDefault="false">
      <MarkerAnnotationExpr name="Override">
        <NameExpr name="Override"/>
      </MarkerAnnotationExpr>
      <PrimitiveType>
        <type>Boolean</type>
      </PrimitiveType>
      <NameExpr/>
      <Parameter>
        <VariableDeclaratorId>
          <name>type</name>
          <arrayCount>0</arrayCount>
        </VariableDeclaratorId>
        <ReferenceType>
          <ClassOrInterfaceType>
            <name>Class</name>
            <typeArguments>
              <typeArguments/>
              <usesDiamondOperator>false</usesDiamondOperator>
            </typeArguments>
          </ClassOrInterfaceType>
          <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
          <arrayCount>0</arrayCount>
        </ReferenceType>
        <modifiers>0</modifiers>
        <id reference="../VariableDeclaratorId"/>
        <type class="ReferenceType" reference="../ReferenceType"/>
        <isVarArgs>false</isVarArgs>
      </Parameter>
      <BlockStmt>
        <ReturnStmt>
          <MethodCallExpr name="equals">
            <ClassExpr>
              <ReferenceType>
                <ClassOrInterfaceType>
                  <name>NameExpr</name>
                  <typeArguments>
                    <typeArguments/>
                    <usesDiamondOperator>false</usesDiamondOperator>
                  </typeArguments>
                </ClassOrInterfaceType>
                <type class="ClassOrInterfaceType" reference="../ClassOrInterfaceType"/>
                <arrayCount>0</arrayCount>
              </ReferenceType>
              <type class="ReferenceType" reference="../ReferenceType"/>
            </ClassExpr>
            <NameExpr/>
            <NameExpr name="type"/>
            <NameExpr name="equals"/>
            <scope class="ClassExpr" reference="../ClassExpr"/>
            <args>
              <NameExpr reference="../../NameExpr[2]"/>
            </args>
          </MethodCallExpr>
          <expr class="MethodCallExpr" reference="../MethodCallExpr"/>
        </ReturnStmt>
      </BlockStmt>
      <NameExpr name="canConvert"/>
      <annotations>
        <MarkerAnnotationExpr reference="../../MarkerAnnotationExpr"/>
      </annotations>
      <type class="PrimitiveType" reference="../PrimitiveType"/>
      <parameters>
        <Parameter reference="../../Parameter"/>
      </parameters>
      <body reference="../BlockStmt"/>
    </MethodDeclaration>
    <ClassOrInterfaceType>
      <annotations/>
      <name>SingleValueConverter</name>
      <typeArguments>
        <typeArguments/>
        <usesDiamondOperator>false</usesDiamondOperator>
      </typeArguments>
    </ClassOrInterfaceType>
    <NameExpr name="NameExprConverter"/>
    <modifiers>1</modifiers>
    <members>
      <MethodDeclaration reference="../../MethodDeclaration"/>
      <MethodDeclaration reference="../../MethodDeclaration[2]"/>
      <MethodDeclaration reference="../../MethodDeclaration[3]"/>
    </members>
    <interface__>false</interface__>
    <implementsList>
      <ClassOrInterfaceType reference="../../ClassOrInterfaceType"/>
    </implementsList>
  </ClassOrInterfaceDeclaration>
  <pakage reference="../PackageDeclaration"/>
  <imports>
    <ImportDeclaration reference="../../ImportDeclaration"/>
    <ImportDeclaration reference="../../ImportDeclaration[2]"/>
  </imports>
  <types>
    <ClassOrInterfaceDeclaration reference="../../ClassOrInterfaceDeclaration"/>
  </types>
</CompilationUnit>